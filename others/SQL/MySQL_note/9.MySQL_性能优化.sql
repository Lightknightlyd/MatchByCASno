
##################################### 影响MySQL性能的因素






##################################### 锁定机制的优化



##################################### 查询优化


1、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：

select id from t where num=10 or num=20

可以这样查询：

select id from t where num=10

union all

select id from t where num=20


2、不要在 where 子句中的“=”【左边】进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。

3、下面的查询也将导致全表扫描：

select id from t where name like '%abc%'

对于 like '..%' (不以 % 开头)

4、应尽量避免在 where 子句中使用 !=或<> 操作符，只用=即可

5、应尽量避免在 where 子句中对字段进行 null 值 判断，否则将导致引擎放弃使用索引而进行全表扫描，如：

select id from t where num is null

可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：

select id from t where num=0


，Query 语句的优化思路和原则主要提现在以下几个方面：
1. 优化更需要优化的Query；
2. 定位优化对象的性能瓶颈； 判断瓶颈是IO还是CPU
3. 明确的优化目标；
4. 从Explain 入手；
5. 多使用profile
6. 永远用小结果集驱动大的结果集；
7. 尽可能在索引中完成排序；
8. 只取出自己需要的Columns；
9. 仅仅使用最有效的过滤条件；
10. 尽可能避免复杂的Join 和子查询；








##################################### schema设计优化





##################################### MySQL软件自身优化（安装、日志等）


##################################### 存储引擎优化


